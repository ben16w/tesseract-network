---

- name: Assert that all required inputs have been provided.
  ansible.builtin.assert:
    that:
      - tailscale_auth_key is not none

- name: Enable IPV4 forwarding in the Linux kernel.
  notify: reload sysctl
  when: tailscale_advertise_routes is not none
  ansible.builtin.lineinfile:
    path: /etc/sysctl.conf
    search_string: 'net.ipv4.ip_forward'
    line: 'net.ipv4.ip_forward=1'
    owner: root
    group: root
    mode: '0644'

- name: Enable IPV6 forwarding in the Linux kernel.
  notify: reload sysctl
  when: tailscale_advertise_routes is not none
  ansible.builtin.lineinfile:
    path: /etc/sysctl.conf
    search_string: 'net.ipv6.conf.all.forwarding'
    line: 'net.ipv6.conf.all.forwarding=1'
    owner: root
    group: root
    mode: '0644'

- name: Download tailscale install script.
  retries: 3
  delay: 10
  ansible.builtin.get_url:
    url: https://tailscale.com/install.sh
    dest: /tmp/tailscale_install.sh
    owner: root
    group: root
    mode: '0744'
    force: false

- name: Install tailscale using downloaded script.
  ansible.builtin.command:
    cmd: bash /tmp/tailscale_install.sh
    creates: /usr/bin/tailscale

- name: Set Tailscale MTU.
  notify: restart tailscale
  when: tailscale_mtu is not none
  ansible.builtin.lineinfile:
    path: /etc/default/tailscaled
    search_string: "TS_DEBUG_MTU"
    line: "TS_DEBUG_MTU={{ tailscale_mtu }}"
    owner: root
    group: root
    mode: '0644'

- name: Remove Tailscale MTU if not set.
  notify: restart tailscale
  when: tailscale_mtu is none
  ansible.builtin.lineinfile:
    path: /etc/default/tailscaled
    search_string: "TS_DEBUG_MTU"
    state: absent
    owner: root
    group: root
    mode: '0644'

- name: Make sure tailscale service unit is running and enabled.
  ansible.builtin.systemd:
    state: started
    name: tailscaled
    enabled: true

- name: Check tailscale status.
  register: result
  changed_when: false
  failed_when: result.rc != 0 and 'Logged out' not in result.stdout
  ansible.builtin.command:
    cmd: "tailscale status"

- name: Run tailscale up.
  when: "'Logged out' in result.stdout"
  ansible.builtin.command:
    cmd: tailscale up --authkey "{{ tailscale_auth_key }}"

- name: Set tailscale accept-dns.
  when: tailscale_accept_dns is false
  ansible.builtin.command:
    cmd: tailscale set --accept-dns=false

- name: Set tailscale advertise-routes.
  when: tailscale_advertise_routes is not none
  ansible.builtin.command:
    cmd: tailscale set --advertise-routes={{ tailscale_advertise_routes }}

- name: Set tailscale advertise-exit-node.
  when: tailscale_advertise_exit_node is true
  ansible.builtin.command:
    cmd: tailscale set --advertise-exit-node

- name: Set tailscale ssh.
  when: tailscale_ssh is true
  ansible.builtin.command:
    cmd: tailscale set --ssh
