---

- name: Assert that all required inputs have been provided.
  ansible.builtin.assert:
    that:
      - proxy_ip is not none

- name: Add records to /etc/hosts.
  ansible.builtin.lineinfile:
    path: /etc/hosts
    search_string: "{{ item.key }}"
    line: "{{ item.value }} {{ item.key }}"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ dns_records | dict2items }}"
  when: item.key != inventory_hostname

- name: Setting architecture to amd64.
  ansible.builtin.set_fact:
    download_arch: "x86_64"
  when: ansible_architecture == "x86_64"

- name: Setting architecture to arm64.
  ansible.builtin.set_fact:
    download_arch: "arm64"
  when: '"armv" in ansible_architecture or "aarch" in ansible_architecture'

- name: Downloading blocky.
  ansible.builtin.get_url:
    url: "https://github.com/0xERR0R/blocky/releases/download/v{{ blocky_version }}/blocky_{{ blocky_version }}_Linux_{{ download_arch }}.tar.gz"
    dest: /tmp/blocky.tar.gz
    owner: root
    group: root
    mode: 0755

- name: Create a blocky installation directory if it does not already exist.
  ansible.builtin.file:
    path: /opt/blocky
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Extract blocky to installation directory.
  notify: restart blocky
  ansible.builtin.unarchive:
    src: /tmp/blocky.tar.gz
    dest: /opt/blocky
    remote_src: true
    owner: root
    group: root
    mode: 0755

- name: Template configuration file to config.yml.
  notify: restart blocky
  ansible.builtin.template:
    src: templates/config.yml.j2
    dest: /opt/blocky/config.yml
    force: true
    owner: root
    group: root
    mode: 0644

- name: Put the blocky systemd file into place.
  ansible.builtin.template:
    src: templates/blocky.service.j2
    dest: /etc/systemd/system/blocky.service
    owner: root
    group: root
    mode: 0755

- name: Make sure the blocky systemd service unit is running and enabled.
  ansible.builtin.systemd:
    state: started
    name: blocky
    enabled: true
